basePath: /api/v1
definitions:
  controllers.GetAut:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  migrations.Users:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      id:
        type: integer
      id_user:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:9888
info:
  contact: {}
  description: This is a  server BackChat.
  title: BackChat Api
  version: "1.0"
paths:
  /example/getauth:
    post:
      description: register a new user
      parameters:
      - description: user
        in: body
        name: get
        required: true
        schema:
          $ref: '#/definitions/controllers.GetAut'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.GetAut'
        "400":
          description: email is not unique
        "500":
          description: user registration failed
      summary: writes the user to the database
      tags:
      - Ð¡reate a new account
  /example/userID:
    get:
      consumes:
      - application/json
      description: getting all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/migrations.Users'
            type: array
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Autorization
    type: apiKey
swagger: "2.0"
